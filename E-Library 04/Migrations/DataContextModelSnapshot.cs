// <auto-generated />
using E_Library_04.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace E_Library_04.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("E_Library_04.Model.Admin", b =>
                {
                    b.Property<int>("adminID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("adminID"), 1L, 1);

                    b.Property<string>("admin_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("admin_password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("admin_username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("adminID");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("E_Library_04.Model.ExamAndTestManagement", b =>
                {
                    b.Property<int>("exam_and_test_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("exam_and_test_ID"), 1L, 1);

                    b.Property<string>("exam_and_test_description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("exam_and_test_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("exam_and_test_ID");

                    b.ToTable("ExamAndTestManagement");
                });

            modelBuilder.Entity("E_Library_04.Model.ExamBank", b =>
                {
                    b.Property<int>("exambankID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("exambankID"), 1L, 1);

                    b.Property<string>("exambank_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("exambankID");

                    b.ToTable("ExamBank");
                });

            modelBuilder.Entity("E_Library_04.Model.FileManagement", b =>
                {
                    b.Property<int>("fileID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("fileID"), 1L, 1);

                    b.Property<string>("file_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("fileID");

                    b.ToTable("FileManagement");
                });

            modelBuilder.Entity("E_Library_04.Model.HelpManagement", b =>
                {
                    b.Property<int>("helpID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("helpID"), 1L, 1);

                    b.Property<string>("help_description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("help_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("helpID");

                    b.ToTable("HelpManagement");
                });

            modelBuilder.Entity("E_Library_04.Model.LessionManagement", b =>
                {
                    b.Property<int>("lessionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("lessionID"), 1L, 1);

                    b.Property<string>("lession_description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lession_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("lessionID");

                    b.ToTable("LessionManagement");
                });

            modelBuilder.Entity("E_Library_04.Model.NotificationManagement", b =>
                {
                    b.Property<int>("notificationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("notificationID"), 1L, 1);

                    b.Property<string>("notification_description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("notification_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("notificationID");

                    b.ToTable("NotificationManagement");
                });

            modelBuilder.Entity("E_Library_04.Model.SubjectManagement", b =>
                {
                    b.Property<int>("subjectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("subjectID"), 1L, 1);

                    b.Property<string>("subject_description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("subject_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("subjectID");

                    b.ToTable("SubjectManagement");
                });

            modelBuilder.Entity("E_Library_04.Model.SystemManagement", b =>
                {
                    b.Property<int>("systemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("systemID"), 1L, 1);

                    b.Property<string>("system_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("systemID");

                    b.ToTable("SystemManagement");
                });

            modelBuilder.Entity("E_Library_04.Model.Teacher", b =>
                {
                    b.Property<int>("teacherID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("teacherID"), 1L, 1);

                    b.Property<string>("teacher_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("teacher_password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("teacher_username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("teacherID");

                    b.ToTable("Teacher");
                });
#pragma warning restore 612, 618
        }
    }
}
